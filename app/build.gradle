apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.zcshou.gogogo"
        minSdkVersion 27
        targetSdkVersion 30
        versionCode 190
        versionName '1.9.0' // 语义化版本 https://semver.org/lang/zh-CN/
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "zh", "zh-rCN", "en", "en-rUS" // 仅保留中文和英文
        ndk {
            abiFilters "arm64-v8a"
        }
    }
    ndkVersion '23.0.7599858'
    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '31.0.0'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        // exclude ARMEABI native so file, ARMEABI has been removed in NDK r17.
        exclude "lib/armeabi/**"
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
//    lintOptions {
//        checkReleaseBuilds false
//        // Or, if you prefer, you can continue to check for errors in release builds,
//        // but continue the build even when errors are found:
//        abortOnError false
//    }
    // 指定输出的可执行程序的名字
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName
                if (variant.buildType.name == 'release') {
                    fileName = "影梭_${defaultConfig.versionName}.apk"
                } else {
                    fileName = "APP_${defaultConfig.versionName}_debug.apk"
                }
                outputFileName=fileName
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.9'
    implementation 'com.elvishew:xlog:1.11.0'            // xLog 日志库
    implementation files('libs/BaiduLBS_Android.jar')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
